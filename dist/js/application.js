var UPV;!function(UPV){var AppConstants=function(){function AppConstants(){}return AppConstants.APP_NAME="UPV",AppConstants.DEFAULT_PAGE_SIZE=10,AppConstants.DEFAULT_PAGE_NUMBER=1,AppConstants.DEFAULT_PAGE_ORDER="latest",AppConstants.SCROLL_OFFSET_DIFF_RATIO=9,AppConstants.EVENT_NETWORK_ERROR="NETWORK_ERROR",AppConstants.EVENT_SCROLL_BOTTOM="SCROLL_BOTTOM",AppConstants.APP_ID="7fb9a64eca3db37234089c874dc654b335c58c25a6aec2284bf67ca37d4cc7d8",AppConstants}();UPV.AppConstants=AppConstants}(UPV||(UPV={}));var UPV;!function(UPV){var AppMessages=function(){function AppMessages(){}return AppMessages.PHOTOS_NETWORK_ERROR_MSG="Could not load Unsplash photos.",AppMessages}();UPV.AppMessages=AppMessages}(UPV||(UPV={}));var UPV;!function(UPV){var URLPaths=function(){function URLPaths(){}return URLPaths.BASE_API_PATH="https://api.unsplash.com/",URLPaths.PHOTOS_TEMPLATE_PAGE="templates/photos.html",URLPaths.ERROR_DIALOG_TEMPLATE_PAGE="templates/dialog/error-dialog.html",URLPaths.API_PHOTOS=URLPaths.BASE_API_PATH+"photos",URLPaths}();UPV.URLPaths=URLPaths}(UPV||(UPV={}));var UPV;!function(UPV){angular.module(UPV.AppConstants.APP_NAME,["ngMaterial","ngMessages","angular-loading-bar","ui.router","ngSanitize"])}(UPV||(UPV={}));var UPV;!function(UPV){var MiscHelper=function(){function MiscHelper(){}return MiscHelper.formatPhotoDate=function(photoDate){var diffSeconds=(Date.now()-photoDate.getTime())/1e3;return diffSeconds>3154e4?Math.ceil(diffSeconds/3154e4)+"yr":diffSeconds>2592e3?Math.ceil(diffSeconds/2592e3)+"mth":diffSeconds>86400?Math.ceil(diffSeconds/86400)+"d":diffSeconds>3600?Math.ceil(diffSeconds/3600)+"h":diffSeconds>60?Math.ceil(diffSeconds/60)+"m":diffSeconds+"s"},MiscHelper}();UPV.MiscHelper=MiscHelper}(UPV||(UPV={}));var UPV;!function(UPV){var ErrorEventListener=function(){function ErrorEventListener(mDialogService,rootScope){var _this=this;this._mDialogService=mDialogService,rootScope.$on(UPV.AppConstants.EVENT_NETWORK_ERROR,function(event,eventMessage){_this._mDialogService.show({clickOutsideToClose:!0,controller:function($scope,message){$scope.message=message},controllerAs:"ctrl",focusOnOpen:!1,targetEvent:event,locals:{message:eventMessage},templateUrl:UPV.URLPaths.ERROR_DIALOG_TEMPLATE_PAGE})})}return ErrorEventListener.$inject=["$mdDialog","$rootScope"],ErrorEventListener}();UPV.ErrorEventListener=ErrorEventListener,angular.module(UPV.AppConstants.APP_NAME).run(ErrorEventListener)}(UPV||(UPV={}));var UPV;!function(UPV){var HttpConfig=function(){function HttpConfig(httpProvider){this._httpProvider=httpProvider,this._httpProvider.defaults.withCredentials=!0,this._httpProvider.defaults.headers.common.Authorization="Client-ID "+UPV.AppConstants.APP_ID,this._httpProvider.defaults.headers.post={"Content-Type":"application/json"},this._httpProvider.defaults.headers.put={"Content-Type":"application/json"}}return HttpConfig.$inject=["$httpProvider"],HttpConfig}();UPV.HttpConfig=HttpConfig,angular.module(UPV.AppConstants.APP_NAME).config(HttpConfig)}(UPV||(UPV={}));var UPV;!function(UPV){var MiscConfig=function(){function MiscConfig(rootScope,window,documentService){var _this=this;this.rootScope=rootScope,this.window=window,this.documentService=documentService;var previousPageYOffset=0,previousScrollDiffRatio=0;angular.element(this.window).bind("scroll",function(){var isScrollingDown=previousPageYOffset<_this.window.pageYOffset;previousPageYOffset=_this.window.pageYOffset;var scrollDiffRatio=Math.ceil(_this.window.pageYOffset/_this.documentService[0].body.scrollHeight*10);isScrollingDown&&scrollDiffRatio==UPV.AppConstants.SCROLL_OFFSET_DIFF_RATIO&&scrollDiffRatio!=previousScrollDiffRatio&&_this.rootScope.$broadcast(UPV.AppConstants.EVENT_SCROLL_BOTTOM),previousScrollDiffRatio=scrollDiffRatio})}return MiscConfig.$inject=["$rootScope","$window","$document"],MiscConfig}();UPV.MiscConfig=MiscConfig,angular.module(UPV.AppConstants.APP_NAME).run(MiscConfig)}(UPV||(UPV={}));var UPV;!function(UPV){var RouteConfig=function(){function RouteConfig(stateProvider,urlRouterProvider){this._stateProvider=stateProvider,this._urlRouterProvider=urlRouterProvider,this._urlRouterProvider.otherwise("/photos"),this._stateProvider.state("photos",{name:"photos",url:"/photos",templateUrl:UPV.URLPaths.PHOTOS_TEMPLATE_PAGE,controller:UPV.GridPageController.NAME,controllerAs:"ctrl"})}return RouteConfig.$inject=["$stateProvider","$urlRouterProvider"],RouteConfig}();UPV.RouteConfig=RouteConfig,angular.module(UPV.AppConstants.APP_NAME).config(RouteConfig)}(UPV||(UPV={}));var UPV;!function(UPV){var PhotoService=function(){function PhotoService(restService){this._restService=restService}return PhotoService.prototype.getPhotos=function(params){return void 0===params&&(params={}),this._restService.getList(UPV.URLPaths.API_PHOTOS,params)},PhotoService.prototype.getPhoto=function(id){return this._restService.get(id,UPV.URLPaths.API_PHOTOS)},PhotoService.$inject=["RestService"],PhotoService.NAME="PhotoService",PhotoService}();UPV.PhotoService=PhotoService,angular.module(UPV.AppConstants.APP_NAME).service(PhotoService.NAME,PhotoService)}(UPV||(UPV={}));var UPV;!function(UPV){var RestService=function(){function RestService(httpService){this._httpService=httpService,this._httpService.defaults.withCredentials=!0}return RestService.prototype.getList=function(url,params){if(void 0===params&&(params={}),url){var query="?";for(var paramKey in params)params.hasOwnProperty(paramKey)&&params[paramKey]&&(query=""+query+paramKey+"="+params[paramKey]+"&");if("?"!=query)return this._httpService.get(""+url+query)}return null},RestService.prototype.get=function(id,url){return url?this._httpService.get(url+"/"+id):void 0},RestService.$inject=["$http"],RestService.NAME="RestService",RestService}();UPV.RestService=RestService,angular.module(UPV.AppConstants.APP_NAME).service(RestService.NAME,RestService)}(UPV||(UPV={}));var UPV;!function(UPV){var GridPageController=function(){function GridPageController(photoService,scope,mdDialogService){var _this=this;this._photoService=photoService,this.mdDialogService=mdDialogService,this.scope=scope,this.scope.$on(UPV.AppConstants.EVENT_SCROLL_BOTTOM,function(event){_this.loadMorePhotos()}),this.photos=[],this.params={page:UPV.AppConstants.DEFAULT_PAGE_NUMBER,per_page:UPV.AppConstants.DEFAULT_PAGE_SIZE,order_by:UPV.AppConstants.DEFAULT_PAGE_ORDER},this.loadPhotos()}return GridPageController.prototype.loadPhotos=function(){var _this=this;this._photoService.getPhotos(this.params).then(function(result){_this.populateGrid(result)},function(error){_this.handleHttpErrors(error)})},GridPageController.prototype.loadMorePhotos=function(){this.params.page+=1,this.loadPhotos()},GridPageController.prototype.refresh=function(){this.photos=[],this.loadPhotos()},GridPageController.prototype.getFormattedPhotoDate=function(date){return UPV.MiscHelper.formatPhotoDate(new Date(Date.parse(date)))},GridPageController.prototype.populateGrid=function(result){var _this=this;console.log(result),result&&result.hasOwnProperty("data")&&result.data.forEach(function(value){_this.photos.push(value)})},GridPageController.prototype.handleHttpErrors=function(error){this.scope.$emit(UPV.AppConstants.EVENT_NETWORK_ERROR,UPV.AppMessages.PHOTOS_NETWORK_ERROR_MSG+" ("+error.status+")")},GridPageController.$inject=["PhotoService","$scope","$mdDialog"],GridPageController.NAME="GridPageController",GridPageController}();UPV.GridPageController=GridPageController,angular.module(UPV.AppConstants.APP_NAME).controller(GridPageController.NAME,GridPageController)}(UPV||(UPV={}));